pipeline {
  agent {
    docker {
      image 'saitejafeed/jenkins-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock --network host'
    }
  }
  environment {
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "saiteja-feed"
  }
  stages {
    stage('Prepare Workspace') {
      steps {
        sh 'git config --global --add safe.directory $WORKSPACE'
      }
    }
    stage('Checkout') {
      steps {
        // Checkout the repository inside the container workspace
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[
            url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git",
            credentialsId: 'github' // Your GitHub token credentials ID
          ]]
        ])
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://localhost:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "saitejafeed/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        script {
          withCredentials([string(credentialsId: 'fb745231-e028-4c0f-a596-d8ab9b4d9a17', variable: 'DOCKER_PASS')]) {
            sh '''
              cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
              docker login -u saitejafeed -p $DOCKER_PASS
              docker build -t ${DOCKER_IMAGE} .
              docker push ${DOCKER_IMAGE}
            '''
          }
        }
      }
    }
    stage('Update Deployment File') {
      steps {
        script {
          withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            sh '''
              cd $WORKSPACE
              git config user.email "abhishek.xyz@gmail.com"
              git config user.name "Abhishek Veeramalla"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
              git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
            '''
          }
        }
      }
    }
  }
}
